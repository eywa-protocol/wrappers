// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package wrappers

import (
	"errors"
	"fmt"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = fmt.Errorf("")
)

// SynthesisMetaData contains all meta data concerning the Synthesis contract.
var SynthesisMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"BurnRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_to\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"BurnRequestSolana\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_rtoken\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_stoken\",\"type\":\"address\"}],\"name\":\"CreatedRepresentation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"RevertBurnCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"RevertSynthesizeRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SynthesizeCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_token\",\"type\":\"bytes32\"}],\"name\":\"SynthesizeCompletedSolana\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SOLANA_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SOLANA_RENT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SOLANA_SYSTEM_PROGRAM\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SOLANA_TOKEN_PROGRAM\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_chain2address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveSide\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oppositeBridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_chainID\",\"type\":\"uint256\"}],\"name\":\"burnSyntheticToken\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"txID\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stoken\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"_pubkeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"}],\"name\":\"burnSyntheticTokenToSolana\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"txID\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_chain2address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveSide\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oppositeBridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_chainID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_out\",\"type\":\"bytes\"}],\"name\":\"burnSyntheticToken_transit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"txID\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"}],\"name\":\"castToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"castToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"changeBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_rtoken\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_chainID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_chainSymbol\",\"type\":\"string\"}],\"name\":\"createRepresentation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_txID\",\"type\":\"bytes32\"}],\"name\":\"emergencyUnburn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_txID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_receiveSide\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oppositeBridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_chainID\",\"type\":\"uint256\"}],\"name\":\"emergencyUnsyntesizeRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_pubkeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes1\",\"name\":\"_bumpSynthesizeRequest\",\"type\":\"bytes1\"},{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"}],\"name\":\"emergencyUnsyntesizeRequestToSolana\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListRepresentation\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_rtoken\",\"type\":\"bytes32\"}],\"name\":\"getRepresentation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTxId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"}],\"name\":\"initializeFunc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_txID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_tokenReal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mintSyntheticToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_txID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_tokenReal\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mintSyntheticTokenToSolana\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"representationReal\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"representationSynt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"chain2address\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"token\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"stoken\",\"type\":\"address\"},{\"internalType\":\"enumSynthesis.RequestState\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"programId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"pubkey\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isSigner\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isWritable\",\"type\":\"bool\"}],\"internalType\":\"structSolanaSerialize.SolanaAccountMeta[]\",\"name\":\"accounts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"structSolanaSerialize.SolanaStandaloneInstruction\",\"name\":\"ix\",\"type\":\"tuple\"}],\"name\":\"serializeSolanaStandaloneInstruction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxy\",\"type\":\"address\"}],\"name\":\"setProxyCurve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sighashEmergencyUnsynthesize\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sighashUnsynthesize\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"synthesizeStates\",\"outputs\":[{\"internalType\":\"enumSynthesis.SynthesizeState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "",
}

// SynthesisABI is the input ABI used to generate the binding from.
// Deprecated: Use SynthesisMetaData.ABI instead.
var SynthesisABI = SynthesisMetaData.ABI

// SynthesisBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SynthesisMetaData.Bin instead.
var SynthesisBin = SynthesisMetaData.Bin

// DeploySynthesis deploys a new Ethereum contract, binding an instance of Synthesis to it.
func DeploySynthesis(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Synthesis, error) {
	parsed, err := SynthesisMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SynthesisBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Synthesis{SynthesisCaller: SynthesisCaller{contract: contract}, SynthesisTransactor: SynthesisTransactor{contract: contract}, SynthesisFilterer: SynthesisFilterer{contract: contract}}, nil
}

// Synthesis is an auto generated Go binding around an Ethereum contract.
type Synthesis struct {
	SynthesisCaller     // Read-only binding to the contract
	SynthesisTransactor // Write-only binding to the contract
	SynthesisFilterer   // Log filterer for contract events
}

// SynthesisCaller is an auto generated read-only Go binding around an Ethereum contract.
type SynthesisCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SynthesisTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SynthesisTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
	gsn      *GsnCallOpts
}

func (_Synthesis *SynthesisTransactor) SetGSNOptions(opts *GsnCallOpts) {
	_Synthesis.gsn = opts
}

// SynthesisFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SynthesisFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SynthesisSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SynthesisSession struct {
	Contract     *Synthesis        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SynthesisCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SynthesisCallerSession struct {
	Contract *SynthesisCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// SynthesisTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SynthesisTransactorSession struct {
	Contract     *SynthesisTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// SynthesisRaw is an auto generated low-level Go binding around an Ethereum contract.
type SynthesisRaw struct {
	Contract *Synthesis // Generic contract binding to access the raw methods on
}

// SynthesisCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SynthesisCallerRaw struct {
	Contract *SynthesisCaller // Generic read-only contract binding to access the raw methods on
}

// SynthesisTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SynthesisTransactorRaw struct {
	Contract *SynthesisTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSynthesis creates a new instance of Synthesis, bound to a specific deployed contract.
func NewSynthesis(address common.Address, backend bind.ContractBackend) (*Synthesis, error) {
	contract, err := bindSynthesis(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Synthesis{SynthesisCaller: SynthesisCaller{contract: contract}, SynthesisTransactor: SynthesisTransactor{contract: contract}, SynthesisFilterer: SynthesisFilterer{contract: contract}}, nil
}

// NewSynthesisCaller creates a new read-only instance of Synthesis, bound to a specific deployed contract.
func NewSynthesisCaller(address common.Address, caller bind.ContractCaller) (*SynthesisCaller, error) {
	contract, err := bindSynthesis(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SynthesisCaller{contract: contract}, nil
}

// NewSynthesisTransactor creates a new write-only instance of Synthesis, bound to a specific deployed contract.
func NewSynthesisTransactor(address common.Address, transactor bind.ContractTransactor) (*SynthesisTransactor, error) {
	contract, err := bindSynthesis(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SynthesisTransactor{contract: contract}, nil
}

// NewSynthesisFilterer creates a new log filterer instance of Synthesis, bound to a specific deployed contract.
func NewSynthesisFilterer(address common.Address, filterer bind.ContractFilterer) (*SynthesisFilterer, error) {
	contract, err := bindSynthesis(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SynthesisFilterer{contract: contract}, nil
}

// bindSynthesis binds a generic wrapper to an already deployed contract.
func bindSynthesis(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SynthesisABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Synthesis *SynthesisRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Synthesis.Contract.SynthesisCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Synthesis *SynthesisRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Synthesis.Contract.SynthesisTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Synthesis *SynthesisRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Synthesis.Contract.SynthesisTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Synthesis *SynthesisCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Synthesis.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Synthesis *SynthesisTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Synthesis.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Synthesis *SynthesisTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Synthesis.Contract.contract.Transact(opts, method, params...)
}

// SOLANACHAINID is a free data retrieval call binding the contract method 0x067bd07a.
//
// Solidity: function SOLANA_CHAIN_ID() view returns(uint256)
func (_Synthesis *SynthesisCaller) SOLANACHAINID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "SOLANA_CHAIN_ID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SOLANACHAINID is a free data retrieval call binding the contract method 0x067bd07a.
//
// Solidity: function SOLANA_CHAIN_ID() view returns(uint256)
func (_Synthesis *SynthesisSession) SOLANACHAINID() (*big.Int, error) {
	return _Synthesis.Contract.SOLANACHAINID(&_Synthesis.CallOpts)
}

// SOLANACHAINID is a free data retrieval call binding the contract method 0x067bd07a.
//
// Solidity: function SOLANA_CHAIN_ID() view returns(uint256)
func (_Synthesis *SynthesisCallerSession) SOLANACHAINID() (*big.Int, error) {
	return _Synthesis.Contract.SOLANACHAINID(&_Synthesis.CallOpts)
}

// SOLANARENT is a free data retrieval call binding the contract method 0x2b1106e3.
//
// Solidity: function SOLANA_RENT() view returns(bytes32)
func (_Synthesis *SynthesisCaller) SOLANARENT(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "SOLANA_RENT")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// SOLANARENT is a free data retrieval call binding the contract method 0x2b1106e3.
//
// Solidity: function SOLANA_RENT() view returns(bytes32)
func (_Synthesis *SynthesisSession) SOLANARENT() ([32]byte, error) {
	return _Synthesis.Contract.SOLANARENT(&_Synthesis.CallOpts)
}

// SOLANARENT is a free data retrieval call binding the contract method 0x2b1106e3.
//
// Solidity: function SOLANA_RENT() view returns(bytes32)
func (_Synthesis *SynthesisCallerSession) SOLANARENT() ([32]byte, error) {
	return _Synthesis.Contract.SOLANARENT(&_Synthesis.CallOpts)
}

// SOLANASYSTEMPROGRAM is a free data retrieval call binding the contract method 0x52dd22ee.
//
// Solidity: function SOLANA_SYSTEM_PROGRAM() view returns(bytes32)
func (_Synthesis *SynthesisCaller) SOLANASYSTEMPROGRAM(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "SOLANA_SYSTEM_PROGRAM")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// SOLANASYSTEMPROGRAM is a free data retrieval call binding the contract method 0x52dd22ee.
//
// Solidity: function SOLANA_SYSTEM_PROGRAM() view returns(bytes32)
func (_Synthesis *SynthesisSession) SOLANASYSTEMPROGRAM() ([32]byte, error) {
	return _Synthesis.Contract.SOLANASYSTEMPROGRAM(&_Synthesis.CallOpts)
}

// SOLANASYSTEMPROGRAM is a free data retrieval call binding the contract method 0x52dd22ee.
//
// Solidity: function SOLANA_SYSTEM_PROGRAM() view returns(bytes32)
func (_Synthesis *SynthesisCallerSession) SOLANASYSTEMPROGRAM() ([32]byte, error) {
	return _Synthesis.Contract.SOLANASYSTEMPROGRAM(&_Synthesis.CallOpts)
}

// SOLANATOKENPROGRAM is a free data retrieval call binding the contract method 0xedff2c82.
//
// Solidity: function SOLANA_TOKEN_PROGRAM() view returns(bytes32)
func (_Synthesis *SynthesisCaller) SOLANATOKENPROGRAM(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "SOLANA_TOKEN_PROGRAM")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// SOLANATOKENPROGRAM is a free data retrieval call binding the contract method 0xedff2c82.
//
// Solidity: function SOLANA_TOKEN_PROGRAM() view returns(bytes32)
func (_Synthesis *SynthesisSession) SOLANATOKENPROGRAM() ([32]byte, error) {
	return _Synthesis.Contract.SOLANATOKENPROGRAM(&_Synthesis.CallOpts)
}

// SOLANATOKENPROGRAM is a free data retrieval call binding the contract method 0xedff2c82.
//
// Solidity: function SOLANA_TOKEN_PROGRAM() view returns(bytes32)
func (_Synthesis *SynthesisCallerSession) SOLANATOKENPROGRAM() ([32]byte, error) {
	return _Synthesis.Contract.SOLANATOKENPROGRAM(&_Synthesis.CallOpts)
}

// Bridge is a free data retrieval call binding the contract method 0xe78cea92.
//
// Solidity: function bridge() view returns(address)
func (_Synthesis *SynthesisCaller) Bridge(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "bridge")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Bridge is a free data retrieval call binding the contract method 0xe78cea92.
//
// Solidity: function bridge() view returns(address)
func (_Synthesis *SynthesisSession) Bridge() (common.Address, error) {
	return _Synthesis.Contract.Bridge(&_Synthesis.CallOpts)
}

// Bridge is a free data retrieval call binding the contract method 0xe78cea92.
//
// Solidity: function bridge() view returns(address)
func (_Synthesis *SynthesisCallerSession) Bridge() (common.Address, error) {
	return _Synthesis.Contract.Bridge(&_Synthesis.CallOpts)
}

// CastToAddress is a free data retrieval call binding the contract method 0x0e03e490.
//
// Solidity: function castToAddress(bytes32 x) pure returns(address)
func (_Synthesis *SynthesisCaller) CastToAddress(opts *bind.CallOpts, x [32]byte) (common.Address, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "castToAddress", x)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CastToAddress is a free data retrieval call binding the contract method 0x0e03e490.
//
// Solidity: function castToAddress(bytes32 x) pure returns(address)
func (_Synthesis *SynthesisSession) CastToAddress(x [32]byte) (common.Address, error) {
	return _Synthesis.Contract.CastToAddress(&_Synthesis.CallOpts, x)
}

// CastToAddress is a free data retrieval call binding the contract method 0x0e03e490.
//
// Solidity: function castToAddress(bytes32 x) pure returns(address)
func (_Synthesis *SynthesisCallerSession) CastToAddress(x [32]byte) (common.Address, error) {
	return _Synthesis.Contract.CastToAddress(&_Synthesis.CallOpts, x)
}

// CastToBytes32 is a free data retrieval call binding the contract method 0x3e7e25c1.
//
// Solidity: function castToBytes32(address a) pure returns(bytes32)
func (_Synthesis *SynthesisCaller) CastToBytes32(opts *bind.CallOpts, a common.Address) ([32]byte, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "castToBytes32", a)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// CastToBytes32 is a free data retrieval call binding the contract method 0x3e7e25c1.
//
// Solidity: function castToBytes32(address a) pure returns(bytes32)
func (_Synthesis *SynthesisSession) CastToBytes32(a common.Address) ([32]byte, error) {
	return _Synthesis.Contract.CastToBytes32(&_Synthesis.CallOpts, a)
}

// CastToBytes32 is a free data retrieval call binding the contract method 0x3e7e25c1.
//
// Solidity: function castToBytes32(address a) pure returns(bytes32)
func (_Synthesis *SynthesisCallerSession) CastToBytes32(a common.Address) ([32]byte, error) {
	return _Synthesis.Contract.CastToBytes32(&_Synthesis.CallOpts, a)
}

// GetListRepresentation is a free data retrieval call binding the contract method 0xa5ec5266.
//
// Solidity: function getListRepresentation() view returns(bytes32[], address[])
func (_Synthesis *SynthesisCaller) GetListRepresentation(opts *bind.CallOpts) ([][32]byte, []common.Address, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "getListRepresentation")

	if err != nil {
		return *new([][32]byte), *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)
	out1 := *abi.ConvertType(out[1], new([]common.Address)).(*[]common.Address)

	return out0, out1, err

}

// GetListRepresentation is a free data retrieval call binding the contract method 0xa5ec5266.
//
// Solidity: function getListRepresentation() view returns(bytes32[], address[])
func (_Synthesis *SynthesisSession) GetListRepresentation() ([][32]byte, []common.Address, error) {
	return _Synthesis.Contract.GetListRepresentation(&_Synthesis.CallOpts)
}

// GetListRepresentation is a free data retrieval call binding the contract method 0xa5ec5266.
//
// Solidity: function getListRepresentation() view returns(bytes32[], address[])
func (_Synthesis *SynthesisCallerSession) GetListRepresentation() ([][32]byte, []common.Address, error) {
	return _Synthesis.Contract.GetListRepresentation(&_Synthesis.CallOpts)
}

// GetRepresentation is a free data retrieval call binding the contract method 0xbca73823.
//
// Solidity: function getRepresentation(bytes32 _rtoken) view returns(address)
func (_Synthesis *SynthesisCaller) GetRepresentation(opts *bind.CallOpts, _rtoken [32]byte) (common.Address, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "getRepresentation", _rtoken)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetRepresentation is a free data retrieval call binding the contract method 0xbca73823.
//
// Solidity: function getRepresentation(bytes32 _rtoken) view returns(address)
func (_Synthesis *SynthesisSession) GetRepresentation(_rtoken [32]byte) (common.Address, error) {
	return _Synthesis.Contract.GetRepresentation(&_Synthesis.CallOpts, _rtoken)
}

// GetRepresentation is a free data retrieval call binding the contract method 0xbca73823.
//
// Solidity: function getRepresentation(bytes32 _rtoken) view returns(address)
func (_Synthesis *SynthesisCallerSession) GetRepresentation(_rtoken [32]byte) (common.Address, error) {
	return _Synthesis.Contract.GetRepresentation(&_Synthesis.CallOpts, _rtoken)
}

// GetTxId is a free data retrieval call binding the contract method 0x6f2258b3.
//
// Solidity: function getTxId() view returns(bytes32)
func (_Synthesis *SynthesisCaller) GetTxId(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "getTxId")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetTxId is a free data retrieval call binding the contract method 0x6f2258b3.
//
// Solidity: function getTxId() view returns(bytes32)
func (_Synthesis *SynthesisSession) GetTxId() ([32]byte, error) {
	return _Synthesis.Contract.GetTxId(&_Synthesis.CallOpts)
}

// GetTxId is a free data retrieval call binding the contract method 0x6f2258b3.
//
// Solidity: function getTxId() view returns(bytes32)
func (_Synthesis *SynthesisCallerSession) GetTxId() ([32]byte, error) {
	return _Synthesis.Contract.GetTxId(&_Synthesis.CallOpts)
}

// IsTrustedForwarder is a free data retrieval call binding the contract method 0x572b6c05.
//
// Solidity: function isTrustedForwarder(address forwarder) view returns(bool)
func (_Synthesis *SynthesisCaller) IsTrustedForwarder(opts *bind.CallOpts, forwarder common.Address) (bool, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "isTrustedForwarder", forwarder)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsTrustedForwarder is a free data retrieval call binding the contract method 0x572b6c05.
//
// Solidity: function isTrustedForwarder(address forwarder) view returns(bool)
func (_Synthesis *SynthesisSession) IsTrustedForwarder(forwarder common.Address) (bool, error) {
	return _Synthesis.Contract.IsTrustedForwarder(&_Synthesis.CallOpts, forwarder)
}

// IsTrustedForwarder is a free data retrieval call binding the contract method 0x572b6c05.
//
// Solidity: function isTrustedForwarder(address forwarder) view returns(bool)
func (_Synthesis *SynthesisCallerSession) IsTrustedForwarder(forwarder common.Address) (bool, error) {
	return _Synthesis.Contract.IsTrustedForwarder(&_Synthesis.CallOpts, forwarder)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Synthesis *SynthesisCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Synthesis *SynthesisSession) Owner() (common.Address, error) {
	return _Synthesis.Contract.Owner(&_Synthesis.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Synthesis *SynthesisCallerSession) Owner() (common.Address, error) {
	return _Synthesis.Contract.Owner(&_Synthesis.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Synthesis *SynthesisCaller) Proxy(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "proxy")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Synthesis *SynthesisSession) Proxy() (common.Address, error) {
	return _Synthesis.Contract.Proxy(&_Synthesis.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Synthesis *SynthesisCallerSession) Proxy() (common.Address, error) {
	return _Synthesis.Contract.Proxy(&_Synthesis.CallOpts)
}

// RepresentationReal is a free data retrieval call binding the contract method 0x7c6a151b.
//
// Solidity: function representationReal(address ) view returns(bytes32)
func (_Synthesis *SynthesisCaller) RepresentationReal(opts *bind.CallOpts, arg0 common.Address) ([32]byte, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "representationReal", arg0)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// RepresentationReal is a free data retrieval call binding the contract method 0x7c6a151b.
//
// Solidity: function representationReal(address ) view returns(bytes32)
func (_Synthesis *SynthesisSession) RepresentationReal(arg0 common.Address) ([32]byte, error) {
	return _Synthesis.Contract.RepresentationReal(&_Synthesis.CallOpts, arg0)
}

// RepresentationReal is a free data retrieval call binding the contract method 0x7c6a151b.
//
// Solidity: function representationReal(address ) view returns(bytes32)
func (_Synthesis *SynthesisCallerSession) RepresentationReal(arg0 common.Address) ([32]byte, error) {
	return _Synthesis.Contract.RepresentationReal(&_Synthesis.CallOpts, arg0)
}

// RepresentationSynt is a free data retrieval call binding the contract method 0x2036f36e.
//
// Solidity: function representationSynt(bytes32 ) view returns(address)
func (_Synthesis *SynthesisCaller) RepresentationSynt(opts *bind.CallOpts, arg0 [32]byte) (common.Address, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "representationSynt", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RepresentationSynt is a free data retrieval call binding the contract method 0x2036f36e.
//
// Solidity: function representationSynt(bytes32 ) view returns(address)
func (_Synthesis *SynthesisSession) RepresentationSynt(arg0 [32]byte) (common.Address, error) {
	return _Synthesis.Contract.RepresentationSynt(&_Synthesis.CallOpts, arg0)
}

// RepresentationSynt is a free data retrieval call binding the contract method 0x2036f36e.
//
// Solidity: function representationSynt(bytes32 ) view returns(address)
func (_Synthesis *SynthesisCallerSession) RepresentationSynt(arg0 [32]byte) (common.Address, error) {
	return _Synthesis.Contract.RepresentationSynt(&_Synthesis.CallOpts, arg0)
}

// Requests is a free data retrieval call binding the contract method 0x9d866985.
//
// Solidity: function requests(bytes32 ) view returns(bytes32 recipient, bytes32 chain2address, uint256 amount, bytes32 token, address stoken, uint8 state)
func (_Synthesis *SynthesisCaller) Requests(opts *bind.CallOpts, arg0 [32]byte) (struct {
	Recipient     [32]byte
	Chain2address [32]byte
	Amount        *big.Int
	Token         [32]byte
	Stoken        common.Address
	State         uint8
}, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "requests", arg0)

	outstruct := new(struct {
		Recipient     [32]byte
		Chain2address [32]byte
		Amount        *big.Int
		Token         [32]byte
		Stoken        common.Address
		State         uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Recipient = *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	outstruct.Chain2address = *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)
	outstruct.Amount = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.Token = *abi.ConvertType(out[3], new([32]byte)).(*[32]byte)
	outstruct.Stoken = *abi.ConvertType(out[4], new(common.Address)).(*common.Address)
	outstruct.State = *abi.ConvertType(out[5], new(uint8)).(*uint8)

	return *outstruct, err

}

// Requests is a free data retrieval call binding the contract method 0x9d866985.
//
// Solidity: function requests(bytes32 ) view returns(bytes32 recipient, bytes32 chain2address, uint256 amount, bytes32 token, address stoken, uint8 state)
func (_Synthesis *SynthesisSession) Requests(arg0 [32]byte) (struct {
	Recipient     [32]byte
	Chain2address [32]byte
	Amount        *big.Int
	Token         [32]byte
	Stoken        common.Address
	State         uint8
}, error) {
	return _Synthesis.Contract.Requests(&_Synthesis.CallOpts, arg0)
}

// Requests is a free data retrieval call binding the contract method 0x9d866985.
//
// Solidity: function requests(bytes32 ) view returns(bytes32 recipient, bytes32 chain2address, uint256 amount, bytes32 token, address stoken, uint8 state)
func (_Synthesis *SynthesisCallerSession) Requests(arg0 [32]byte) (struct {
	Recipient     [32]byte
	Chain2address [32]byte
	Amount        *big.Int
	Token         [32]byte
	Stoken        common.Address
	State         uint8
}, error) {
	return _Synthesis.Contract.Requests(&_Synthesis.CallOpts, arg0)
}

// SerializeSolanaStandaloneInstruction is a free data retrieval call binding the contract method 0x2ab8c8b0.
//
// Solidity: function serializeSolanaStandaloneInstruction((bytes32,(bytes32,bool,bool)[],bytes) ix) pure returns(bytes)
func (_Synthesis *SynthesisCaller) SerializeSolanaStandaloneInstruction(opts *bind.CallOpts, ix SolanaSerializeSolanaStandaloneInstruction) ([]byte, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "serializeSolanaStandaloneInstruction", ix)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// SerializeSolanaStandaloneInstruction is a free data retrieval call binding the contract method 0x2ab8c8b0.
//
// Solidity: function serializeSolanaStandaloneInstruction((bytes32,(bytes32,bool,bool)[],bytes) ix) pure returns(bytes)
func (_Synthesis *SynthesisSession) SerializeSolanaStandaloneInstruction(ix SolanaSerializeSolanaStandaloneInstruction) ([]byte, error) {
	return _Synthesis.Contract.SerializeSolanaStandaloneInstruction(&_Synthesis.CallOpts, ix)
}

// SerializeSolanaStandaloneInstruction is a free data retrieval call binding the contract method 0x2ab8c8b0.
//
// Solidity: function serializeSolanaStandaloneInstruction((bytes32,(bytes32,bool,bool)[],bytes) ix) pure returns(bytes)
func (_Synthesis *SynthesisCallerSession) SerializeSolanaStandaloneInstruction(ix SolanaSerializeSolanaStandaloneInstruction) ([]byte, error) {
	return _Synthesis.Contract.SerializeSolanaStandaloneInstruction(&_Synthesis.CallOpts, ix)
}

// SighashEmergencyUnsynthesize is a free data retrieval call binding the contract method 0xe834e4ad.
//
// Solidity: function sighashEmergencyUnsynthesize() view returns(bytes)
func (_Synthesis *SynthesisCaller) SighashEmergencyUnsynthesize(opts *bind.CallOpts) ([]byte, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "sighashEmergencyUnsynthesize")

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// SighashEmergencyUnsynthesize is a free data retrieval call binding the contract method 0xe834e4ad.
//
// Solidity: function sighashEmergencyUnsynthesize() view returns(bytes)
func (_Synthesis *SynthesisSession) SighashEmergencyUnsynthesize() ([]byte, error) {
	return _Synthesis.Contract.SighashEmergencyUnsynthesize(&_Synthesis.CallOpts)
}

// SighashEmergencyUnsynthesize is a free data retrieval call binding the contract method 0xe834e4ad.
//
// Solidity: function sighashEmergencyUnsynthesize() view returns(bytes)
func (_Synthesis *SynthesisCallerSession) SighashEmergencyUnsynthesize() ([]byte, error) {
	return _Synthesis.Contract.SighashEmergencyUnsynthesize(&_Synthesis.CallOpts)
}

// SighashUnsynthesize is a free data retrieval call binding the contract method 0x456eb8b8.
//
// Solidity: function sighashUnsynthesize() view returns(bytes)
func (_Synthesis *SynthesisCaller) SighashUnsynthesize(opts *bind.CallOpts) ([]byte, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "sighashUnsynthesize")

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// SighashUnsynthesize is a free data retrieval call binding the contract method 0x456eb8b8.
//
// Solidity: function sighashUnsynthesize() view returns(bytes)
func (_Synthesis *SynthesisSession) SighashUnsynthesize() ([]byte, error) {
	return _Synthesis.Contract.SighashUnsynthesize(&_Synthesis.CallOpts)
}

// SighashUnsynthesize is a free data retrieval call binding the contract method 0x456eb8b8.
//
// Solidity: function sighashUnsynthesize() view returns(bytes)
func (_Synthesis *SynthesisCallerSession) SighashUnsynthesize() ([]byte, error) {
	return _Synthesis.Contract.SighashUnsynthesize(&_Synthesis.CallOpts)
}

// SynthesizeStates is a free data retrieval call binding the contract method 0xd23fd796.
//
// Solidity: function synthesizeStates(bytes32 ) view returns(uint8)
func (_Synthesis *SynthesisCaller) SynthesizeStates(opts *bind.CallOpts, arg0 [32]byte) (uint8, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "synthesizeStates", arg0)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// SynthesizeStates is a free data retrieval call binding the contract method 0xd23fd796.
//
// Solidity: function synthesizeStates(bytes32 ) view returns(uint8)
func (_Synthesis *SynthesisSession) SynthesizeStates(arg0 [32]byte) (uint8, error) {
	return _Synthesis.Contract.SynthesizeStates(&_Synthesis.CallOpts, arg0)
}

// SynthesizeStates is a free data retrieval call binding the contract method 0xd23fd796.
//
// Solidity: function synthesizeStates(bytes32 ) view returns(uint8)
func (_Synthesis *SynthesisCallerSession) SynthesizeStates(arg0 [32]byte) (uint8, error) {
	return _Synthesis.Contract.SynthesizeStates(&_Synthesis.CallOpts, arg0)
}

// TokenDecimals is a free data retrieval call binding the contract method 0x44aedc5f.
//
// Solidity: function tokenDecimals(bytes32 ) view returns(uint8)
func (_Synthesis *SynthesisCaller) TokenDecimals(opts *bind.CallOpts, arg0 [32]byte) (uint8, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "tokenDecimals", arg0)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// TokenDecimals is a free data retrieval call binding the contract method 0x44aedc5f.
//
// Solidity: function tokenDecimals(bytes32 ) view returns(uint8)
func (_Synthesis *SynthesisSession) TokenDecimals(arg0 [32]byte) (uint8, error) {
	return _Synthesis.Contract.TokenDecimals(&_Synthesis.CallOpts, arg0)
}

// TokenDecimals is a free data retrieval call binding the contract method 0x44aedc5f.
//
// Solidity: function tokenDecimals(bytes32 ) view returns(uint8)
func (_Synthesis *SynthesisCallerSession) TokenDecimals(arg0 [32]byte) (uint8, error) {
	return _Synthesis.Contract.TokenDecimals(&_Synthesis.CallOpts, arg0)
}

// TrustedForwarder is a free data retrieval call binding the contract method 0x7da0a877.
//
// Solidity: function trustedForwarder() view returns(address)
func (_Synthesis *SynthesisCaller) TrustedForwarder(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "trustedForwarder")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TrustedForwarder is a free data retrieval call binding the contract method 0x7da0a877.
//
// Solidity: function trustedForwarder() view returns(address)
func (_Synthesis *SynthesisSession) TrustedForwarder() (common.Address, error) {
	return _Synthesis.Contract.TrustedForwarder(&_Synthesis.CallOpts)
}

// TrustedForwarder is a free data retrieval call binding the contract method 0x7da0a877.
//
// Solidity: function trustedForwarder() view returns(address)
func (_Synthesis *SynthesisCallerSession) TrustedForwarder() (common.Address, error) {
	return _Synthesis.Contract.TrustedForwarder(&_Synthesis.CallOpts)
}

// VersionRecipient is a free data retrieval call binding the contract method 0x486ff0cd.
//
// Solidity: function versionRecipient() view returns(string)
func (_Synthesis *SynthesisCaller) VersionRecipient(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Synthesis.contract.Call(opts, &out, "versionRecipient")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// VersionRecipient is a free data retrieval call binding the contract method 0x486ff0cd.
//
// Solidity: function versionRecipient() view returns(string)
func (_Synthesis *SynthesisSession) VersionRecipient() (string, error) {
	return _Synthesis.Contract.VersionRecipient(&_Synthesis.CallOpts)
}

// VersionRecipient is a free data retrieval call binding the contract method 0x486ff0cd.
//
// Solidity: function versionRecipient() view returns(string)
func (_Synthesis *SynthesisCallerSession) VersionRecipient() (string, error) {
	return _Synthesis.Contract.VersionRecipient(&_Synthesis.CallOpts)
}

// BurnSyntheticToken is a paid mutator transaction binding the contract method 0x60341612.
//
// Solidity: function burnSyntheticToken(address _stoken, uint256 _amount, address _chain2address, address _receiveSide, address _oppositeBridge, uint256 _chainID) returns(bytes32 txID)
func (_Synthesis *SynthesisTransactor) BurnSyntheticToken(opts *bind.TransactOpts, _stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "burnSyntheticToken", _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID)
}
func (_Synthesis *SynthesisTransactor) BurnSyntheticTokenOverGsn(opts *bind.TransactOpts, _stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "burnSyntheticToken", _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID)
}

// BurnSyntheticToken is a paid mutator transaction binding the contract method 0x60341612.
//
// Solidity: function burnSyntheticToken(address _stoken, uint256 _amount, address _chain2address, address _receiveSide, address _oppositeBridge, uint256 _chainID) returns(bytes32 txID)
func (_Synthesis *SynthesisSession) BurnSyntheticToken(_stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (*types.Transaction, error) {
	return _Synthesis.Contract.BurnSyntheticToken(&_Synthesis.TransactOpts, _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID)
}
func (_Synthesis *SynthesisSession) BurnSyntheticTokenOverGsn(_stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (common.Hash, error) {
	return _Synthesis.Contract.BurnSyntheticTokenOverGsn(&_Synthesis.TransactOpts, _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID)
}

// BurnSyntheticToken is a paid mutator transaction binding the contract method 0x60341612.
//
// Solidity: function burnSyntheticToken(address _stoken, uint256 _amount, address _chain2address, address _receiveSide, address _oppositeBridge, uint256 _chainID) returns(bytes32 txID)
func (_Synthesis *SynthesisTransactorSession) BurnSyntheticToken(_stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (*types.Transaction, error) {
	return _Synthesis.Contract.BurnSyntheticToken(&_Synthesis.TransactOpts, _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID)
}
func (_Synthesis *SynthesisTransactorSession) BurnSyntheticTokenOverGsn(_stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (common.Hash, error) {
	return _Synthesis.Contract.BurnSyntheticTokenOverGsn(&_Synthesis.TransactOpts, _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID)
}

// BurnSyntheticTokenToSolana is a paid mutator transaction binding the contract method 0x42a3f4f0.
//
// Solidity: function burnSyntheticTokenToSolana(address _stoken, bytes32[] _pubkeys, uint256 _amount, uint256 _chainId) returns(bytes32 txID)
func (_Synthesis *SynthesisTransactor) BurnSyntheticTokenToSolana(opts *bind.TransactOpts, _stoken common.Address, _pubkeys [][32]byte, _amount *big.Int, _chainId *big.Int) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "burnSyntheticTokenToSolana", _stoken, _pubkeys, _amount, _chainId)
}
func (_Synthesis *SynthesisTransactor) BurnSyntheticTokenToSolanaOverGsn(opts *bind.TransactOpts, _stoken common.Address, _pubkeys [][32]byte, _amount *big.Int, _chainId *big.Int) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "burnSyntheticTokenToSolana", _stoken, _pubkeys, _amount, _chainId)
}

// BurnSyntheticTokenToSolana is a paid mutator transaction binding the contract method 0x42a3f4f0.
//
// Solidity: function burnSyntheticTokenToSolana(address _stoken, bytes32[] _pubkeys, uint256 _amount, uint256 _chainId) returns(bytes32 txID)
func (_Synthesis *SynthesisSession) BurnSyntheticTokenToSolana(_stoken common.Address, _pubkeys [][32]byte, _amount *big.Int, _chainId *big.Int) (*types.Transaction, error) {
	return _Synthesis.Contract.BurnSyntheticTokenToSolana(&_Synthesis.TransactOpts, _stoken, _pubkeys, _amount, _chainId)
}
func (_Synthesis *SynthesisSession) BurnSyntheticTokenToSolanaOverGsn(_stoken common.Address, _pubkeys [][32]byte, _amount *big.Int, _chainId *big.Int) (common.Hash, error) {
	return _Synthesis.Contract.BurnSyntheticTokenToSolanaOverGsn(&_Synthesis.TransactOpts, _stoken, _pubkeys, _amount, _chainId)
}

// BurnSyntheticTokenToSolana is a paid mutator transaction binding the contract method 0x42a3f4f0.
//
// Solidity: function burnSyntheticTokenToSolana(address _stoken, bytes32[] _pubkeys, uint256 _amount, uint256 _chainId) returns(bytes32 txID)
func (_Synthesis *SynthesisTransactorSession) BurnSyntheticTokenToSolana(_stoken common.Address, _pubkeys [][32]byte, _amount *big.Int, _chainId *big.Int) (*types.Transaction, error) {
	return _Synthesis.Contract.BurnSyntheticTokenToSolana(&_Synthesis.TransactOpts, _stoken, _pubkeys, _amount, _chainId)
}
func (_Synthesis *SynthesisTransactorSession) BurnSyntheticTokenToSolanaOverGsn(_stoken common.Address, _pubkeys [][32]byte, _amount *big.Int, _chainId *big.Int) (common.Hash, error) {
	return _Synthesis.Contract.BurnSyntheticTokenToSolanaOverGsn(&_Synthesis.TransactOpts, _stoken, _pubkeys, _amount, _chainId)
}

// BurnSyntheticTokenTransit is a paid mutator transaction binding the contract method 0xe9a71481.
//
// Solidity: function burnSyntheticToken_transit(address _stoken, uint256 _amount, address _chain2address, address _receiveSide, address _oppositeBridge, uint256 _chainID, bytes _out) returns(bytes32 txID)
func (_Synthesis *SynthesisTransactor) BurnSyntheticTokenTransit(opts *bind.TransactOpts, _stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int, _out []byte) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "burnSyntheticToken_transit", _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID, _out)
}
func (_Synthesis *SynthesisTransactor) BurnSyntheticTokenTransitOverGsn(opts *bind.TransactOpts, _stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int, _out []byte) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "burnSyntheticToken_transit", _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID, _out)
}

// BurnSyntheticTokenTransit is a paid mutator transaction binding the contract method 0xe9a71481.
//
// Solidity: function burnSyntheticToken_transit(address _stoken, uint256 _amount, address _chain2address, address _receiveSide, address _oppositeBridge, uint256 _chainID, bytes _out) returns(bytes32 txID)
func (_Synthesis *SynthesisSession) BurnSyntheticTokenTransit(_stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int, _out []byte) (*types.Transaction, error) {
	return _Synthesis.Contract.BurnSyntheticTokenTransit(&_Synthesis.TransactOpts, _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID, _out)
}
func (_Synthesis *SynthesisSession) BurnSyntheticTokenTransitOverGsn(_stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int, _out []byte) (common.Hash, error) {
	return _Synthesis.Contract.BurnSyntheticTokenTransitOverGsn(&_Synthesis.TransactOpts, _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID, _out)
}

// BurnSyntheticTokenTransit is a paid mutator transaction binding the contract method 0xe9a71481.
//
// Solidity: function burnSyntheticToken_transit(address _stoken, uint256 _amount, address _chain2address, address _receiveSide, address _oppositeBridge, uint256 _chainID, bytes _out) returns(bytes32 txID)
func (_Synthesis *SynthesisTransactorSession) BurnSyntheticTokenTransit(_stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int, _out []byte) (*types.Transaction, error) {
	return _Synthesis.Contract.BurnSyntheticTokenTransit(&_Synthesis.TransactOpts, _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID, _out)
}
func (_Synthesis *SynthesisTransactorSession) BurnSyntheticTokenTransitOverGsn(_stoken common.Address, _amount *big.Int, _chain2address common.Address, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int, _out []byte) (common.Hash, error) {
	return _Synthesis.Contract.BurnSyntheticTokenTransitOverGsn(&_Synthesis.TransactOpts, _stoken, _amount, _chain2address, _receiveSide, _oppositeBridge, _chainID, _out)
}

// ChangeBridge is a paid mutator transaction binding the contract method 0x08774410.
//
// Solidity: function changeBridge(address _bridge) returns()
func (_Synthesis *SynthesisTransactor) ChangeBridge(opts *bind.TransactOpts, _bridge common.Address) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "changeBridge", _bridge)
}
func (_Synthesis *SynthesisTransactor) ChangeBridgeOverGsn(opts *bind.TransactOpts, _bridge common.Address) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "changeBridge", _bridge)
}

// ChangeBridge is a paid mutator transaction binding the contract method 0x08774410.
//
// Solidity: function changeBridge(address _bridge) returns()
func (_Synthesis *SynthesisSession) ChangeBridge(_bridge common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.ChangeBridge(&_Synthesis.TransactOpts, _bridge)
}
func (_Synthesis *SynthesisSession) ChangeBridgeOverGsn(_bridge common.Address) (common.Hash, error) {
	return _Synthesis.Contract.ChangeBridgeOverGsn(&_Synthesis.TransactOpts, _bridge)
}

// ChangeBridge is a paid mutator transaction binding the contract method 0x08774410.
//
// Solidity: function changeBridge(address _bridge) returns()
func (_Synthesis *SynthesisTransactorSession) ChangeBridge(_bridge common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.ChangeBridge(&_Synthesis.TransactOpts, _bridge)
}
func (_Synthesis *SynthesisTransactorSession) ChangeBridgeOverGsn(_bridge common.Address) (common.Hash, error) {
	return _Synthesis.Contract.ChangeBridgeOverGsn(&_Synthesis.TransactOpts, _bridge)
}

// CreateRepresentation is a paid mutator transaction binding the contract method 0xd8a14a93.
//
// Solidity: function createRepresentation(bytes32 _rtoken, uint8 _decimals, string _name, string _symbol, uint256 _chainID, string _chainSymbol) returns()
func (_Synthesis *SynthesisTransactor) CreateRepresentation(opts *bind.TransactOpts, _rtoken [32]byte, _decimals uint8, _name string, _symbol string, _chainID *big.Int, _chainSymbol string) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "createRepresentation", _rtoken, _decimals, _name, _symbol, _chainID, _chainSymbol)
}
func (_Synthesis *SynthesisTransactor) CreateRepresentationOverGsn(opts *bind.TransactOpts, _rtoken [32]byte, _decimals uint8, _name string, _symbol string, _chainID *big.Int, _chainSymbol string) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "createRepresentation", _rtoken, _decimals, _name, _symbol, _chainID, _chainSymbol)
}

// CreateRepresentation is a paid mutator transaction binding the contract method 0xd8a14a93.
//
// Solidity: function createRepresentation(bytes32 _rtoken, uint8 _decimals, string _name, string _symbol, uint256 _chainID, string _chainSymbol) returns()
func (_Synthesis *SynthesisSession) CreateRepresentation(_rtoken [32]byte, _decimals uint8, _name string, _symbol string, _chainID *big.Int, _chainSymbol string) (*types.Transaction, error) {
	return _Synthesis.Contract.CreateRepresentation(&_Synthesis.TransactOpts, _rtoken, _decimals, _name, _symbol, _chainID, _chainSymbol)
}
func (_Synthesis *SynthesisSession) CreateRepresentationOverGsn(_rtoken [32]byte, _decimals uint8, _name string, _symbol string, _chainID *big.Int, _chainSymbol string) (common.Hash, error) {
	return _Synthesis.Contract.CreateRepresentationOverGsn(&_Synthesis.TransactOpts, _rtoken, _decimals, _name, _symbol, _chainID, _chainSymbol)
}

// CreateRepresentation is a paid mutator transaction binding the contract method 0xd8a14a93.
//
// Solidity: function createRepresentation(bytes32 _rtoken, uint8 _decimals, string _name, string _symbol, uint256 _chainID, string _chainSymbol) returns()
func (_Synthesis *SynthesisTransactorSession) CreateRepresentation(_rtoken [32]byte, _decimals uint8, _name string, _symbol string, _chainID *big.Int, _chainSymbol string) (*types.Transaction, error) {
	return _Synthesis.Contract.CreateRepresentation(&_Synthesis.TransactOpts, _rtoken, _decimals, _name, _symbol, _chainID, _chainSymbol)
}
func (_Synthesis *SynthesisTransactorSession) CreateRepresentationOverGsn(_rtoken [32]byte, _decimals uint8, _name string, _symbol string, _chainID *big.Int, _chainSymbol string) (common.Hash, error) {
	return _Synthesis.Contract.CreateRepresentationOverGsn(&_Synthesis.TransactOpts, _rtoken, _decimals, _name, _symbol, _chainID, _chainSymbol)
}

// EmergencyUnburn is a paid mutator transaction binding the contract method 0xbb5f3cca.
//
// Solidity: function emergencyUnburn(bytes32 _txID) returns()
func (_Synthesis *SynthesisTransactor) EmergencyUnburn(opts *bind.TransactOpts, _txID [32]byte) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "emergencyUnburn", _txID)
}
func (_Synthesis *SynthesisTransactor) EmergencyUnburnOverGsn(opts *bind.TransactOpts, _txID [32]byte) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "emergencyUnburn", _txID)
}

// EmergencyUnburn is a paid mutator transaction binding the contract method 0xbb5f3cca.
//
// Solidity: function emergencyUnburn(bytes32 _txID) returns()
func (_Synthesis *SynthesisSession) EmergencyUnburn(_txID [32]byte) (*types.Transaction, error) {
	return _Synthesis.Contract.EmergencyUnburn(&_Synthesis.TransactOpts, _txID)
}
func (_Synthesis *SynthesisSession) EmergencyUnburnOverGsn(_txID [32]byte) (common.Hash, error) {
	return _Synthesis.Contract.EmergencyUnburnOverGsn(&_Synthesis.TransactOpts, _txID)
}

// EmergencyUnburn is a paid mutator transaction binding the contract method 0xbb5f3cca.
//
// Solidity: function emergencyUnburn(bytes32 _txID) returns()
func (_Synthesis *SynthesisTransactorSession) EmergencyUnburn(_txID [32]byte) (*types.Transaction, error) {
	return _Synthesis.Contract.EmergencyUnburn(&_Synthesis.TransactOpts, _txID)
}
func (_Synthesis *SynthesisTransactorSession) EmergencyUnburnOverGsn(_txID [32]byte) (common.Hash, error) {
	return _Synthesis.Contract.EmergencyUnburnOverGsn(&_Synthesis.TransactOpts, _txID)
}

// EmergencyUnsyntesizeRequest is a paid mutator transaction binding the contract method 0x926ad0fe.
//
// Solidity: function emergencyUnsyntesizeRequest(bytes32 _txID, address _receiveSide, address _oppositeBridge, uint256 _chainID) returns()
func (_Synthesis *SynthesisTransactor) EmergencyUnsyntesizeRequest(opts *bind.TransactOpts, _txID [32]byte, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "emergencyUnsyntesizeRequest", _txID, _receiveSide, _oppositeBridge, _chainID)
}
func (_Synthesis *SynthesisTransactor) EmergencyUnsyntesizeRequestOverGsn(opts *bind.TransactOpts, _txID [32]byte, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "emergencyUnsyntesizeRequest", _txID, _receiveSide, _oppositeBridge, _chainID)
}

// EmergencyUnsyntesizeRequest is a paid mutator transaction binding the contract method 0x926ad0fe.
//
// Solidity: function emergencyUnsyntesizeRequest(bytes32 _txID, address _receiveSide, address _oppositeBridge, uint256 _chainID) returns()
func (_Synthesis *SynthesisSession) EmergencyUnsyntesizeRequest(_txID [32]byte, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (*types.Transaction, error) {
	return _Synthesis.Contract.EmergencyUnsyntesizeRequest(&_Synthesis.TransactOpts, _txID, _receiveSide, _oppositeBridge, _chainID)
}
func (_Synthesis *SynthesisSession) EmergencyUnsyntesizeRequestOverGsn(_txID [32]byte, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (common.Hash, error) {
	return _Synthesis.Contract.EmergencyUnsyntesizeRequestOverGsn(&_Synthesis.TransactOpts, _txID, _receiveSide, _oppositeBridge, _chainID)
}

// EmergencyUnsyntesizeRequest is a paid mutator transaction binding the contract method 0x926ad0fe.
//
// Solidity: function emergencyUnsyntesizeRequest(bytes32 _txID, address _receiveSide, address _oppositeBridge, uint256 _chainID) returns()
func (_Synthesis *SynthesisTransactorSession) EmergencyUnsyntesizeRequest(_txID [32]byte, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (*types.Transaction, error) {
	return _Synthesis.Contract.EmergencyUnsyntesizeRequest(&_Synthesis.TransactOpts, _txID, _receiveSide, _oppositeBridge, _chainID)
}
func (_Synthesis *SynthesisTransactorSession) EmergencyUnsyntesizeRequestOverGsn(_txID [32]byte, _receiveSide common.Address, _oppositeBridge common.Address, _chainID *big.Int) (common.Hash, error) {
	return _Synthesis.Contract.EmergencyUnsyntesizeRequestOverGsn(&_Synthesis.TransactOpts, _txID, _receiveSide, _oppositeBridge, _chainID)
}

// EmergencyUnsyntesizeRequestToSolana is a paid mutator transaction binding the contract method 0xfb47d165.
//
// Solidity: function emergencyUnsyntesizeRequestToSolana(bytes32[] _pubkeys, bytes1 _bumpSynthesizeRequest, uint256 _chainId) returns()
func (_Synthesis *SynthesisTransactor) EmergencyUnsyntesizeRequestToSolana(opts *bind.TransactOpts, _pubkeys [][32]byte, _bumpSynthesizeRequest [1]byte, _chainId *big.Int) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "emergencyUnsyntesizeRequestToSolana", _pubkeys, _bumpSynthesizeRequest, _chainId)
}
func (_Synthesis *SynthesisTransactor) EmergencyUnsyntesizeRequestToSolanaOverGsn(opts *bind.TransactOpts, _pubkeys [][32]byte, _bumpSynthesizeRequest [1]byte, _chainId *big.Int) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "emergencyUnsyntesizeRequestToSolana", _pubkeys, _bumpSynthesizeRequest, _chainId)
}

// EmergencyUnsyntesizeRequestToSolana is a paid mutator transaction binding the contract method 0xfb47d165.
//
// Solidity: function emergencyUnsyntesizeRequestToSolana(bytes32[] _pubkeys, bytes1 _bumpSynthesizeRequest, uint256 _chainId) returns()
func (_Synthesis *SynthesisSession) EmergencyUnsyntesizeRequestToSolana(_pubkeys [][32]byte, _bumpSynthesizeRequest [1]byte, _chainId *big.Int) (*types.Transaction, error) {
	return _Synthesis.Contract.EmergencyUnsyntesizeRequestToSolana(&_Synthesis.TransactOpts, _pubkeys, _bumpSynthesizeRequest, _chainId)
}
func (_Synthesis *SynthesisSession) EmergencyUnsyntesizeRequestToSolanaOverGsn(_pubkeys [][32]byte, _bumpSynthesizeRequest [1]byte, _chainId *big.Int) (common.Hash, error) {
	return _Synthesis.Contract.EmergencyUnsyntesizeRequestToSolanaOverGsn(&_Synthesis.TransactOpts, _pubkeys, _bumpSynthesizeRequest, _chainId)
}

// EmergencyUnsyntesizeRequestToSolana is a paid mutator transaction binding the contract method 0xfb47d165.
//
// Solidity: function emergencyUnsyntesizeRequestToSolana(bytes32[] _pubkeys, bytes1 _bumpSynthesizeRequest, uint256 _chainId) returns()
func (_Synthesis *SynthesisTransactorSession) EmergencyUnsyntesizeRequestToSolana(_pubkeys [][32]byte, _bumpSynthesizeRequest [1]byte, _chainId *big.Int) (*types.Transaction, error) {
	return _Synthesis.Contract.EmergencyUnsyntesizeRequestToSolana(&_Synthesis.TransactOpts, _pubkeys, _bumpSynthesizeRequest, _chainId)
}
func (_Synthesis *SynthesisTransactorSession) EmergencyUnsyntesizeRequestToSolanaOverGsn(_pubkeys [][32]byte, _bumpSynthesizeRequest [1]byte, _chainId *big.Int) (common.Hash, error) {
	return _Synthesis.Contract.EmergencyUnsyntesizeRequestToSolanaOverGsn(&_Synthesis.TransactOpts, _pubkeys, _bumpSynthesizeRequest, _chainId)
}

// InitializeFunc is a paid mutator transaction binding the contract method 0x3410c15f.
//
// Solidity: function initializeFunc(address _bridge, address _trustedForwarder) returns()
func (_Synthesis *SynthesisTransactor) InitializeFunc(opts *bind.TransactOpts, _bridge common.Address, _trustedForwarder common.Address) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "initializeFunc", _bridge, _trustedForwarder)
}
func (_Synthesis *SynthesisTransactor) InitializeFuncOverGsn(opts *bind.TransactOpts, _bridge common.Address, _trustedForwarder common.Address) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "initializeFunc", _bridge, _trustedForwarder)
}

// InitializeFunc is a paid mutator transaction binding the contract method 0x3410c15f.
//
// Solidity: function initializeFunc(address _bridge, address _trustedForwarder) returns()
func (_Synthesis *SynthesisSession) InitializeFunc(_bridge common.Address, _trustedForwarder common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.InitializeFunc(&_Synthesis.TransactOpts, _bridge, _trustedForwarder)
}
func (_Synthesis *SynthesisSession) InitializeFuncOverGsn(_bridge common.Address, _trustedForwarder common.Address) (common.Hash, error) {
	return _Synthesis.Contract.InitializeFuncOverGsn(&_Synthesis.TransactOpts, _bridge, _trustedForwarder)
}

// InitializeFunc is a paid mutator transaction binding the contract method 0x3410c15f.
//
// Solidity: function initializeFunc(address _bridge, address _trustedForwarder) returns()
func (_Synthesis *SynthesisTransactorSession) InitializeFunc(_bridge common.Address, _trustedForwarder common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.InitializeFunc(&_Synthesis.TransactOpts, _bridge, _trustedForwarder)
}
func (_Synthesis *SynthesisTransactorSession) InitializeFuncOverGsn(_bridge common.Address, _trustedForwarder common.Address) (common.Hash, error) {
	return _Synthesis.Contract.InitializeFuncOverGsn(&_Synthesis.TransactOpts, _bridge, _trustedForwarder)
}

// MintSyntheticToken is a paid mutator transaction binding the contract method 0xd32a991e.
//
// Solidity: function mintSyntheticToken(bytes32 _txID, address _tokenReal, uint256 _amount, address _to) returns()
func (_Synthesis *SynthesisTransactor) MintSyntheticToken(opts *bind.TransactOpts, _txID [32]byte, _tokenReal common.Address, _amount *big.Int, _to common.Address) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "mintSyntheticToken", _txID, _tokenReal, _amount, _to)
}
func (_Synthesis *SynthesisTransactor) MintSyntheticTokenOverGsn(opts *bind.TransactOpts, _txID [32]byte, _tokenReal common.Address, _amount *big.Int, _to common.Address) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "mintSyntheticToken", _txID, _tokenReal, _amount, _to)
}

// MintSyntheticToken is a paid mutator transaction binding the contract method 0xd32a991e.
//
// Solidity: function mintSyntheticToken(bytes32 _txID, address _tokenReal, uint256 _amount, address _to) returns()
func (_Synthesis *SynthesisSession) MintSyntheticToken(_txID [32]byte, _tokenReal common.Address, _amount *big.Int, _to common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.MintSyntheticToken(&_Synthesis.TransactOpts, _txID, _tokenReal, _amount, _to)
}
func (_Synthesis *SynthesisSession) MintSyntheticTokenOverGsn(_txID [32]byte, _tokenReal common.Address, _amount *big.Int, _to common.Address) (common.Hash, error) {
	return _Synthesis.Contract.MintSyntheticTokenOverGsn(&_Synthesis.TransactOpts, _txID, _tokenReal, _amount, _to)
}

// MintSyntheticToken is a paid mutator transaction binding the contract method 0xd32a991e.
//
// Solidity: function mintSyntheticToken(bytes32 _txID, address _tokenReal, uint256 _amount, address _to) returns()
func (_Synthesis *SynthesisTransactorSession) MintSyntheticToken(_txID [32]byte, _tokenReal common.Address, _amount *big.Int, _to common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.MintSyntheticToken(&_Synthesis.TransactOpts, _txID, _tokenReal, _amount, _to)
}
func (_Synthesis *SynthesisTransactorSession) MintSyntheticTokenOverGsn(_txID [32]byte, _tokenReal common.Address, _amount *big.Int, _to common.Address) (common.Hash, error) {
	return _Synthesis.Contract.MintSyntheticTokenOverGsn(&_Synthesis.TransactOpts, _txID, _tokenReal, _amount, _to)
}

// MintSyntheticTokenToSolana is a paid mutator transaction binding the contract method 0x0ead6192.
//
// Solidity: function mintSyntheticTokenToSolana(bytes32 _txID, bytes32 _tokenReal, uint256 _amount, address _to) returns()
func (_Synthesis *SynthesisTransactor) MintSyntheticTokenToSolana(opts *bind.TransactOpts, _txID [32]byte, _tokenReal [32]byte, _amount *big.Int, _to common.Address) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "mintSyntheticTokenToSolana", _txID, _tokenReal, _amount, _to)
}
func (_Synthesis *SynthesisTransactor) MintSyntheticTokenToSolanaOverGsn(opts *bind.TransactOpts, _txID [32]byte, _tokenReal [32]byte, _amount *big.Int, _to common.Address) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "mintSyntheticTokenToSolana", _txID, _tokenReal, _amount, _to)
}

// MintSyntheticTokenToSolana is a paid mutator transaction binding the contract method 0x0ead6192.
//
// Solidity: function mintSyntheticTokenToSolana(bytes32 _txID, bytes32 _tokenReal, uint256 _amount, address _to) returns()
func (_Synthesis *SynthesisSession) MintSyntheticTokenToSolana(_txID [32]byte, _tokenReal [32]byte, _amount *big.Int, _to common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.MintSyntheticTokenToSolana(&_Synthesis.TransactOpts, _txID, _tokenReal, _amount, _to)
}
func (_Synthesis *SynthesisSession) MintSyntheticTokenToSolanaOverGsn(_txID [32]byte, _tokenReal [32]byte, _amount *big.Int, _to common.Address) (common.Hash, error) {
	return _Synthesis.Contract.MintSyntheticTokenToSolanaOverGsn(&_Synthesis.TransactOpts, _txID, _tokenReal, _amount, _to)
}

// MintSyntheticTokenToSolana is a paid mutator transaction binding the contract method 0x0ead6192.
//
// Solidity: function mintSyntheticTokenToSolana(bytes32 _txID, bytes32 _tokenReal, uint256 _amount, address _to) returns()
func (_Synthesis *SynthesisTransactorSession) MintSyntheticTokenToSolana(_txID [32]byte, _tokenReal [32]byte, _amount *big.Int, _to common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.MintSyntheticTokenToSolana(&_Synthesis.TransactOpts, _txID, _tokenReal, _amount, _to)
}
func (_Synthesis *SynthesisTransactorSession) MintSyntheticTokenToSolanaOverGsn(_txID [32]byte, _tokenReal [32]byte, _amount *big.Int, _to common.Address) (common.Hash, error) {
	return _Synthesis.Contract.MintSyntheticTokenToSolanaOverGsn(&_Synthesis.TransactOpts, _txID, _tokenReal, _amount, _to)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Synthesis *SynthesisTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "renounceOwnership")
}
func (_Synthesis *SynthesisTransactor) RenounceOwnershipOverGsn(opts *bind.TransactOpts) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Synthesis *SynthesisSession) RenounceOwnership() (*types.Transaction, error) {
	return _Synthesis.Contract.RenounceOwnership(&_Synthesis.TransactOpts)
}
func (_Synthesis *SynthesisSession) RenounceOwnershipOverGsn() (common.Hash, error) {
	return _Synthesis.Contract.RenounceOwnershipOverGsn(&_Synthesis.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Synthesis *SynthesisTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _Synthesis.Contract.RenounceOwnership(&_Synthesis.TransactOpts)
}
func (_Synthesis *SynthesisTransactorSession) RenounceOwnershipOverGsn() (common.Hash, error) {
	return _Synthesis.Contract.RenounceOwnershipOverGsn(&_Synthesis.TransactOpts)
}

// SetProxyCurve is a paid mutator transaction binding the contract method 0x286452f4.
//
// Solidity: function setProxyCurve(address _proxy) returns()
func (_Synthesis *SynthesisTransactor) SetProxyCurve(opts *bind.TransactOpts, _proxy common.Address) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "setProxyCurve", _proxy)
}
func (_Synthesis *SynthesisTransactor) SetProxyCurveOverGsn(opts *bind.TransactOpts, _proxy common.Address) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "setProxyCurve", _proxy)
}

// SetProxyCurve is a paid mutator transaction binding the contract method 0x286452f4.
//
// Solidity: function setProxyCurve(address _proxy) returns()
func (_Synthesis *SynthesisSession) SetProxyCurve(_proxy common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.SetProxyCurve(&_Synthesis.TransactOpts, _proxy)
}
func (_Synthesis *SynthesisSession) SetProxyCurveOverGsn(_proxy common.Address) (common.Hash, error) {
	return _Synthesis.Contract.SetProxyCurveOverGsn(&_Synthesis.TransactOpts, _proxy)
}

// SetProxyCurve is a paid mutator transaction binding the contract method 0x286452f4.
//
// Solidity: function setProxyCurve(address _proxy) returns()
func (_Synthesis *SynthesisTransactorSession) SetProxyCurve(_proxy common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.SetProxyCurve(&_Synthesis.TransactOpts, _proxy)
}
func (_Synthesis *SynthesisTransactorSession) SetProxyCurveOverGsn(_proxy common.Address) (common.Hash, error) {
	return _Synthesis.Contract.SetProxyCurveOverGsn(&_Synthesis.TransactOpts, _proxy)
}

// SetTrustedForwarder is a paid mutator transaction binding the contract method 0xda742228.
//
// Solidity: function setTrustedForwarder(address _forwarder) returns()
func (_Synthesis *SynthesisTransactor) SetTrustedForwarder(opts *bind.TransactOpts, _forwarder common.Address) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "setTrustedForwarder", _forwarder)
}
func (_Synthesis *SynthesisTransactor) SetTrustedForwarderOverGsn(opts *bind.TransactOpts, _forwarder common.Address) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "setTrustedForwarder", _forwarder)
}

// SetTrustedForwarder is a paid mutator transaction binding the contract method 0xda742228.
//
// Solidity: function setTrustedForwarder(address _forwarder) returns()
func (_Synthesis *SynthesisSession) SetTrustedForwarder(_forwarder common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.SetTrustedForwarder(&_Synthesis.TransactOpts, _forwarder)
}
func (_Synthesis *SynthesisSession) SetTrustedForwarderOverGsn(_forwarder common.Address) (common.Hash, error) {
	return _Synthesis.Contract.SetTrustedForwarderOverGsn(&_Synthesis.TransactOpts, _forwarder)
}

// SetTrustedForwarder is a paid mutator transaction binding the contract method 0xda742228.
//
// Solidity: function setTrustedForwarder(address _forwarder) returns()
func (_Synthesis *SynthesisTransactorSession) SetTrustedForwarder(_forwarder common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.SetTrustedForwarder(&_Synthesis.TransactOpts, _forwarder)
}
func (_Synthesis *SynthesisTransactorSession) SetTrustedForwarderOverGsn(_forwarder common.Address) (common.Hash, error) {
	return _Synthesis.Contract.SetTrustedForwarderOverGsn(&_Synthesis.TransactOpts, _forwarder)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Synthesis *SynthesisTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Synthesis.contract.Transact(opts, "transferOwnership", newOwner)
}
func (_Synthesis *SynthesisTransactor) TransferOwnershipOverGsn(opts *bind.TransactOpts, newOwner common.Address) (common.Hash, error) {
	return GsnExecutor(_Synthesis.gsn, SynthesisMetaData.ABI, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Synthesis *SynthesisSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.TransferOwnership(&_Synthesis.TransactOpts, newOwner)
}
func (_Synthesis *SynthesisSession) TransferOwnershipOverGsn(newOwner common.Address) (common.Hash, error) {
	return _Synthesis.Contract.TransferOwnershipOverGsn(&_Synthesis.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Synthesis *SynthesisTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Synthesis.Contract.TransferOwnership(&_Synthesis.TransactOpts, newOwner)
}
func (_Synthesis *SynthesisTransactorSession) TransferOwnershipOverGsn(newOwner common.Address) (common.Hash, error) {
	return _Synthesis.Contract.TransferOwnershipOverGsn(&_Synthesis.TransactOpts, newOwner)
}

// SynthesisBurnRequestIterator is returned from FilterBurnRequest and is used to iterate over the raw logs and unpacked data for BurnRequest events raised by the Synthesis contract.
type SynthesisBurnRequestIterator struct {
	Event *SynthesisBurnRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SynthesisBurnRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SynthesisBurnRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SynthesisBurnRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SynthesisBurnRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SynthesisBurnRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SynthesisBurnRequest represents a BurnRequest event raised by the Synthesis contract.
type SynthesisBurnRequest struct {
	Id     [32]byte
	From   common.Address
	To     common.Address
	Amount *big.Int
	Token  common.Address
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterBurnRequest is a free log retrieval operation binding the contract event 0xc9956c099ac2218b5efa7ef3e2a449c6f1afbf7ac3f4dbb27846253e53ff6f75.
//
// Solidity: event BurnRequest(bytes32 indexed _id, address indexed _from, address indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) FilterBurnRequest(opts *bind.FilterOpts, _id [][32]byte, _from []common.Address, _to []common.Address) (*SynthesisBurnRequestIterator, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _fromRule []interface{}
	for _, _fromItem := range _from {
		_fromRule = append(_fromRule, _fromItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.FilterLogs(opts, "BurnRequest", _idRule, _fromRule, _toRule)
	if err != nil {
		return nil, err
	}
	return &SynthesisBurnRequestIterator{contract: _Synthesis.contract, event: "BurnRequest", logs: logs, sub: sub}, nil
}

// WatchBurnRequest is a free log subscription operation binding the contract event 0xc9956c099ac2218b5efa7ef3e2a449c6f1afbf7ac3f4dbb27846253e53ff6f75.
//
// Solidity: event BurnRequest(bytes32 indexed _id, address indexed _from, address indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) WatchBurnRequest(opts *bind.WatchOpts, sink chan<- *SynthesisBurnRequest, _id [][32]byte, _from []common.Address, _to []common.Address) (event.Subscription, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _fromRule []interface{}
	for _, _fromItem := range _from {
		_fromRule = append(_fromRule, _fromItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.WatchLogs(opts, "BurnRequest", _idRule, _fromRule, _toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SynthesisBurnRequest)
				if err := _Synthesis.contract.UnpackLog(event, "BurnRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBurnRequest is a log parse operation binding the contract event 0xc9956c099ac2218b5efa7ef3e2a449c6f1afbf7ac3f4dbb27846253e53ff6f75.
//
// Solidity: event BurnRequest(bytes32 indexed _id, address indexed _from, address indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) ParseBurnRequest(log types.Log) (*SynthesisBurnRequest, error) {
	event := new(SynthesisBurnRequest)
	if err := _Synthesis.contract.UnpackLog(event, "BurnRequest", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SynthesisBurnRequestSolanaIterator is returned from FilterBurnRequestSolana and is used to iterate over the raw logs and unpacked data for BurnRequestSolana events raised by the Synthesis contract.
type SynthesisBurnRequestSolanaIterator struct {
	Event *SynthesisBurnRequestSolana // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SynthesisBurnRequestSolanaIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SynthesisBurnRequestSolana)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SynthesisBurnRequestSolana)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SynthesisBurnRequestSolanaIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SynthesisBurnRequestSolanaIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SynthesisBurnRequestSolana represents a BurnRequestSolana event raised by the Synthesis contract.
type SynthesisBurnRequestSolana struct {
	Id     [32]byte
	From   common.Address
	To     [32]byte
	Amount *big.Int
	Token  common.Address
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterBurnRequestSolana is a free log retrieval operation binding the contract event 0xc6d6292436ddeb6658af181fe7f18ff0e87726ae3d33b80e531b99d1b75b37c6.
//
// Solidity: event BurnRequestSolana(bytes32 indexed _id, address indexed _from, bytes32 indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) FilterBurnRequestSolana(opts *bind.FilterOpts, _id [][32]byte, _from []common.Address, _to [][32]byte) (*SynthesisBurnRequestSolanaIterator, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _fromRule []interface{}
	for _, _fromItem := range _from {
		_fromRule = append(_fromRule, _fromItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.FilterLogs(opts, "BurnRequestSolana", _idRule, _fromRule, _toRule)
	if err != nil {
		return nil, err
	}
	return &SynthesisBurnRequestSolanaIterator{contract: _Synthesis.contract, event: "BurnRequestSolana", logs: logs, sub: sub}, nil
}

// WatchBurnRequestSolana is a free log subscription operation binding the contract event 0xc6d6292436ddeb6658af181fe7f18ff0e87726ae3d33b80e531b99d1b75b37c6.
//
// Solidity: event BurnRequestSolana(bytes32 indexed _id, address indexed _from, bytes32 indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) WatchBurnRequestSolana(opts *bind.WatchOpts, sink chan<- *SynthesisBurnRequestSolana, _id [][32]byte, _from []common.Address, _to [][32]byte) (event.Subscription, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _fromRule []interface{}
	for _, _fromItem := range _from {
		_fromRule = append(_fromRule, _fromItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.WatchLogs(opts, "BurnRequestSolana", _idRule, _fromRule, _toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SynthesisBurnRequestSolana)
				if err := _Synthesis.contract.UnpackLog(event, "BurnRequestSolana", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBurnRequestSolana is a log parse operation binding the contract event 0xc6d6292436ddeb6658af181fe7f18ff0e87726ae3d33b80e531b99d1b75b37c6.
//
// Solidity: event BurnRequestSolana(bytes32 indexed _id, address indexed _from, bytes32 indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) ParseBurnRequestSolana(log types.Log) (*SynthesisBurnRequestSolana, error) {
	event := new(SynthesisBurnRequestSolana)
	if err := _Synthesis.contract.UnpackLog(event, "BurnRequestSolana", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SynthesisCreatedRepresentationIterator is returned from FilterCreatedRepresentation and is used to iterate over the raw logs and unpacked data for CreatedRepresentation events raised by the Synthesis contract.
type SynthesisCreatedRepresentationIterator struct {
	Event *SynthesisCreatedRepresentation // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SynthesisCreatedRepresentationIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SynthesisCreatedRepresentation)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SynthesisCreatedRepresentation)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SynthesisCreatedRepresentationIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SynthesisCreatedRepresentationIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SynthesisCreatedRepresentation represents a CreatedRepresentation event raised by the Synthesis contract.
type SynthesisCreatedRepresentation struct {
	Rtoken [32]byte
	Stoken common.Address
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterCreatedRepresentation is a free log retrieval operation binding the contract event 0x0fdd64ca71aae9e0eff106ac8bc9854e33442396ca6bc92a54841a1cca4dac02.
//
// Solidity: event CreatedRepresentation(bytes32 indexed _rtoken, address indexed _stoken)
func (_Synthesis *SynthesisFilterer) FilterCreatedRepresentation(opts *bind.FilterOpts, _rtoken [][32]byte, _stoken []common.Address) (*SynthesisCreatedRepresentationIterator, error) {

	var _rtokenRule []interface{}
	for _, _rtokenItem := range _rtoken {
		_rtokenRule = append(_rtokenRule, _rtokenItem)
	}
	var _stokenRule []interface{}
	for _, _stokenItem := range _stoken {
		_stokenRule = append(_stokenRule, _stokenItem)
	}

	logs, sub, err := _Synthesis.contract.FilterLogs(opts, "CreatedRepresentation", _rtokenRule, _stokenRule)
	if err != nil {
		return nil, err
	}
	return &SynthesisCreatedRepresentationIterator{contract: _Synthesis.contract, event: "CreatedRepresentation", logs: logs, sub: sub}, nil
}

// WatchCreatedRepresentation is a free log subscription operation binding the contract event 0x0fdd64ca71aae9e0eff106ac8bc9854e33442396ca6bc92a54841a1cca4dac02.
//
// Solidity: event CreatedRepresentation(bytes32 indexed _rtoken, address indexed _stoken)
func (_Synthesis *SynthesisFilterer) WatchCreatedRepresentation(opts *bind.WatchOpts, sink chan<- *SynthesisCreatedRepresentation, _rtoken [][32]byte, _stoken []common.Address) (event.Subscription, error) {

	var _rtokenRule []interface{}
	for _, _rtokenItem := range _rtoken {
		_rtokenRule = append(_rtokenRule, _rtokenItem)
	}
	var _stokenRule []interface{}
	for _, _stokenItem := range _stoken {
		_stokenRule = append(_stokenRule, _stokenItem)
	}

	logs, sub, err := _Synthesis.contract.WatchLogs(opts, "CreatedRepresentation", _rtokenRule, _stokenRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SynthesisCreatedRepresentation)
				if err := _Synthesis.contract.UnpackLog(event, "CreatedRepresentation", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCreatedRepresentation is a log parse operation binding the contract event 0x0fdd64ca71aae9e0eff106ac8bc9854e33442396ca6bc92a54841a1cca4dac02.
//
// Solidity: event CreatedRepresentation(bytes32 indexed _rtoken, address indexed _stoken)
func (_Synthesis *SynthesisFilterer) ParseCreatedRepresentation(log types.Log) (*SynthesisCreatedRepresentation, error) {
	event := new(SynthesisCreatedRepresentation)
	if err := _Synthesis.contract.UnpackLog(event, "CreatedRepresentation", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SynthesisOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the Synthesis contract.
type SynthesisOwnershipTransferredIterator struct {
	Event *SynthesisOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SynthesisOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SynthesisOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SynthesisOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SynthesisOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SynthesisOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SynthesisOwnershipTransferred represents a OwnershipTransferred event raised by the Synthesis contract.
type SynthesisOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Synthesis *SynthesisFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*SynthesisOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Synthesis.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &SynthesisOwnershipTransferredIterator{contract: _Synthesis.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Synthesis *SynthesisFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *SynthesisOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Synthesis.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SynthesisOwnershipTransferred)
				if err := _Synthesis.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Synthesis *SynthesisFilterer) ParseOwnershipTransferred(log types.Log) (*SynthesisOwnershipTransferred, error) {
	event := new(SynthesisOwnershipTransferred)
	if err := _Synthesis.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SynthesisRevertBurnCompletedIterator is returned from FilterRevertBurnCompleted and is used to iterate over the raw logs and unpacked data for RevertBurnCompleted events raised by the Synthesis contract.
type SynthesisRevertBurnCompletedIterator struct {
	Event *SynthesisRevertBurnCompleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SynthesisRevertBurnCompletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SynthesisRevertBurnCompleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SynthesisRevertBurnCompleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SynthesisRevertBurnCompletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SynthesisRevertBurnCompletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SynthesisRevertBurnCompleted represents a RevertBurnCompleted event raised by the Synthesis contract.
type SynthesisRevertBurnCompleted struct {
	Id     [32]byte
	To     common.Address
	Amount *big.Int
	Token  common.Address
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterRevertBurnCompleted is a free log retrieval operation binding the contract event 0x9493a56a97907eea22cfa71b25b1900a9afc3041e4de977a2717b964d3eac615.
//
// Solidity: event RevertBurnCompleted(bytes32 indexed _id, address indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) FilterRevertBurnCompleted(opts *bind.FilterOpts, _id [][32]byte, _to []common.Address) (*SynthesisRevertBurnCompletedIterator, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.FilterLogs(opts, "RevertBurnCompleted", _idRule, _toRule)
	if err != nil {
		return nil, err
	}
	return &SynthesisRevertBurnCompletedIterator{contract: _Synthesis.contract, event: "RevertBurnCompleted", logs: logs, sub: sub}, nil
}

// WatchRevertBurnCompleted is a free log subscription operation binding the contract event 0x9493a56a97907eea22cfa71b25b1900a9afc3041e4de977a2717b964d3eac615.
//
// Solidity: event RevertBurnCompleted(bytes32 indexed _id, address indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) WatchRevertBurnCompleted(opts *bind.WatchOpts, sink chan<- *SynthesisRevertBurnCompleted, _id [][32]byte, _to []common.Address) (event.Subscription, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.WatchLogs(opts, "RevertBurnCompleted", _idRule, _toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SynthesisRevertBurnCompleted)
				if err := _Synthesis.contract.UnpackLog(event, "RevertBurnCompleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRevertBurnCompleted is a log parse operation binding the contract event 0x9493a56a97907eea22cfa71b25b1900a9afc3041e4de977a2717b964d3eac615.
//
// Solidity: event RevertBurnCompleted(bytes32 indexed _id, address indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) ParseRevertBurnCompleted(log types.Log) (*SynthesisRevertBurnCompleted, error) {
	event := new(SynthesisRevertBurnCompleted)
	if err := _Synthesis.contract.UnpackLog(event, "RevertBurnCompleted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SynthesisRevertSynthesizeRequestIterator is returned from FilterRevertSynthesizeRequest and is used to iterate over the raw logs and unpacked data for RevertSynthesizeRequest events raised by the Synthesis contract.
type SynthesisRevertSynthesizeRequestIterator struct {
	Event *SynthesisRevertSynthesizeRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SynthesisRevertSynthesizeRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SynthesisRevertSynthesizeRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SynthesisRevertSynthesizeRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SynthesisRevertSynthesizeRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SynthesisRevertSynthesizeRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SynthesisRevertSynthesizeRequest represents a RevertSynthesizeRequest event raised by the Synthesis contract.
type SynthesisRevertSynthesizeRequest struct {
	Id  [32]byte
	To  common.Address
	Raw types.Log // Blockchain specific contextual infos
}

// FilterRevertSynthesizeRequest is a free log retrieval operation binding the contract event 0x9bc8099e19706f253ae634ef1a5fb6ef84b4748c2183472905b9b2511cfa8617.
//
// Solidity: event RevertSynthesizeRequest(bytes32 indexed _id, address indexed _to)
func (_Synthesis *SynthesisFilterer) FilterRevertSynthesizeRequest(opts *bind.FilterOpts, _id [][32]byte, _to []common.Address) (*SynthesisRevertSynthesizeRequestIterator, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.FilterLogs(opts, "RevertSynthesizeRequest", _idRule, _toRule)
	if err != nil {
		return nil, err
	}
	return &SynthesisRevertSynthesizeRequestIterator{contract: _Synthesis.contract, event: "RevertSynthesizeRequest", logs: logs, sub: sub}, nil
}

// WatchRevertSynthesizeRequest is a free log subscription operation binding the contract event 0x9bc8099e19706f253ae634ef1a5fb6ef84b4748c2183472905b9b2511cfa8617.
//
// Solidity: event RevertSynthesizeRequest(bytes32 indexed _id, address indexed _to)
func (_Synthesis *SynthesisFilterer) WatchRevertSynthesizeRequest(opts *bind.WatchOpts, sink chan<- *SynthesisRevertSynthesizeRequest, _id [][32]byte, _to []common.Address) (event.Subscription, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.WatchLogs(opts, "RevertSynthesizeRequest", _idRule, _toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SynthesisRevertSynthesizeRequest)
				if err := _Synthesis.contract.UnpackLog(event, "RevertSynthesizeRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRevertSynthesizeRequest is a log parse operation binding the contract event 0x9bc8099e19706f253ae634ef1a5fb6ef84b4748c2183472905b9b2511cfa8617.
//
// Solidity: event RevertSynthesizeRequest(bytes32 indexed _id, address indexed _to)
func (_Synthesis *SynthesisFilterer) ParseRevertSynthesizeRequest(log types.Log) (*SynthesisRevertSynthesizeRequest, error) {
	event := new(SynthesisRevertSynthesizeRequest)
	if err := _Synthesis.contract.UnpackLog(event, "RevertSynthesizeRequest", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SynthesisSynthesizeCompletedIterator is returned from FilterSynthesizeCompleted and is used to iterate over the raw logs and unpacked data for SynthesizeCompleted events raised by the Synthesis contract.
type SynthesisSynthesizeCompletedIterator struct {
	Event *SynthesisSynthesizeCompleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SynthesisSynthesizeCompletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SynthesisSynthesizeCompleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SynthesisSynthesizeCompleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SynthesisSynthesizeCompletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SynthesisSynthesizeCompletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SynthesisSynthesizeCompleted represents a SynthesizeCompleted event raised by the Synthesis contract.
type SynthesisSynthesizeCompleted struct {
	Id     [32]byte
	To     common.Address
	Amount *big.Int
	Token  common.Address
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterSynthesizeCompleted is a free log retrieval operation binding the contract event 0x95b6058c9127027e5bcd170e6da61f7d1f0b074726e189dd29037fab3363cfb7.
//
// Solidity: event SynthesizeCompleted(bytes32 indexed _id, address indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) FilterSynthesizeCompleted(opts *bind.FilterOpts, _id [][32]byte, _to []common.Address) (*SynthesisSynthesizeCompletedIterator, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.FilterLogs(opts, "SynthesizeCompleted", _idRule, _toRule)
	if err != nil {
		return nil, err
	}
	return &SynthesisSynthesizeCompletedIterator{contract: _Synthesis.contract, event: "SynthesizeCompleted", logs: logs, sub: sub}, nil
}

// WatchSynthesizeCompleted is a free log subscription operation binding the contract event 0x95b6058c9127027e5bcd170e6da61f7d1f0b074726e189dd29037fab3363cfb7.
//
// Solidity: event SynthesizeCompleted(bytes32 indexed _id, address indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) WatchSynthesizeCompleted(opts *bind.WatchOpts, sink chan<- *SynthesisSynthesizeCompleted, _id [][32]byte, _to []common.Address) (event.Subscription, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.WatchLogs(opts, "SynthesizeCompleted", _idRule, _toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SynthesisSynthesizeCompleted)
				if err := _Synthesis.contract.UnpackLog(event, "SynthesizeCompleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSynthesizeCompleted is a log parse operation binding the contract event 0x95b6058c9127027e5bcd170e6da61f7d1f0b074726e189dd29037fab3363cfb7.
//
// Solidity: event SynthesizeCompleted(bytes32 indexed _id, address indexed _to, uint256 _amount, address _token)
func (_Synthesis *SynthesisFilterer) ParseSynthesizeCompleted(log types.Log) (*SynthesisSynthesizeCompleted, error) {
	event := new(SynthesisSynthesizeCompleted)
	if err := _Synthesis.contract.UnpackLog(event, "SynthesizeCompleted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SynthesisSynthesizeCompletedSolanaIterator is returned from FilterSynthesizeCompletedSolana and is used to iterate over the raw logs and unpacked data for SynthesizeCompletedSolana events raised by the Synthesis contract.
type SynthesisSynthesizeCompletedSolanaIterator struct {
	Event *SynthesisSynthesizeCompletedSolana // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SynthesisSynthesizeCompletedSolanaIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SynthesisSynthesizeCompletedSolana)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SynthesisSynthesizeCompletedSolana)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SynthesisSynthesizeCompletedSolanaIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SynthesisSynthesizeCompletedSolanaIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SynthesisSynthesizeCompletedSolana represents a SynthesizeCompletedSolana event raised by the Synthesis contract.
type SynthesisSynthesizeCompletedSolana struct {
	Id     [32]byte
	To     common.Address
	Amount *big.Int
	Token  [32]byte
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterSynthesizeCompletedSolana is a free log retrieval operation binding the contract event 0x830cdbc928657695fea360e180c669155ee61408533a72baa9df865687e79552.
//
// Solidity: event SynthesizeCompletedSolana(bytes32 indexed _id, address indexed _to, uint256 _amount, bytes32 _token)
func (_Synthesis *SynthesisFilterer) FilterSynthesizeCompletedSolana(opts *bind.FilterOpts, _id [][32]byte, _to []common.Address) (*SynthesisSynthesizeCompletedSolanaIterator, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.FilterLogs(opts, "SynthesizeCompletedSolana", _idRule, _toRule)
	if err != nil {
		return nil, err
	}
	return &SynthesisSynthesizeCompletedSolanaIterator{contract: _Synthesis.contract, event: "SynthesizeCompletedSolana", logs: logs, sub: sub}, nil
}

// WatchSynthesizeCompletedSolana is a free log subscription operation binding the contract event 0x830cdbc928657695fea360e180c669155ee61408533a72baa9df865687e79552.
//
// Solidity: event SynthesizeCompletedSolana(bytes32 indexed _id, address indexed _to, uint256 _amount, bytes32 _token)
func (_Synthesis *SynthesisFilterer) WatchSynthesizeCompletedSolana(opts *bind.WatchOpts, sink chan<- *SynthesisSynthesizeCompletedSolana, _id [][32]byte, _to []common.Address) (event.Subscription, error) {

	var _idRule []interface{}
	for _, _idItem := range _id {
		_idRule = append(_idRule, _idItem)
	}
	var _toRule []interface{}
	for _, _toItem := range _to {
		_toRule = append(_toRule, _toItem)
	}

	logs, sub, err := _Synthesis.contract.WatchLogs(opts, "SynthesizeCompletedSolana", _idRule, _toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SynthesisSynthesizeCompletedSolana)
				if err := _Synthesis.contract.UnpackLog(event, "SynthesizeCompletedSolana", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSynthesizeCompletedSolana is a log parse operation binding the contract event 0x830cdbc928657695fea360e180c669155ee61408533a72baa9df865687e79552.
//
// Solidity: event SynthesizeCompletedSolana(bytes32 indexed _id, address indexed _to, uint256 _amount, bytes32 _token)
func (_Synthesis *SynthesisFilterer) ParseSynthesizeCompletedSolana(log types.Log) (*SynthesisSynthesizeCompletedSolana, error) {
	event := new(SynthesisSynthesizeCompletedSolana)
	if err := _Synthesis.contract.UnpackLog(event, "SynthesizeCompletedSolana", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
